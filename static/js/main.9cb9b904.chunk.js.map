{"version":3,"sources":["services/firebaseService.js","services/firebaseConfig.js","services/authService.js","features/auth/SignIn.js","features/AppHeader/AppHeader.js","features/AppHome/AppHome.js","features/Admin/Admin.js","features/Profile/definition.js","features/RecordsManager/components/CoreImage.js","features/RecordsManager/components/CoreField.js","features/RecordsManager/components/CoreForm.js","features/RecordsManager/components/CoreList.js","features/RecordsManager/RecordsManager.js","features/Profile/Profile.js","features/auth/PublicRoute.js","features/auth/PrivateRoute.js","features/TableManager/model.js","features/TableManager/model_paper.js","features/TableManager/TableManager.js","features/DataManager/DataManager.js","App.js","store/reducers/rootReducer.js","index.js"],"names":["tableName","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","webApiKey","signIn","user","a","axios","post","returnSecureToken","fbuser","signUp","useStyles","makeStyles","theme","formContainer","display","height","width","flexDirection","justifyContent","alignItems","margin","actionsContainer","SignIn","dispatch","useDispatch","useState","email","password","setUser","classes","history","useHistory","handleSignIn","loginUser","type","data","push","Fragment","Card","className","raised","CardContent","Grid","container","spacing","item","AlternateEmail","TextField","value","label","onChange","target","u","LockOutlined","CardActions","Button","color","onClick","variant","firebaseProj","firebase","initializeApp","storage","firebaseService","fbTable","projId","importFrom","url","get","importedRecords","createRecord","record","localId","idToken","fbCustomer","updateRecord","recordId","put","id","deleteRecord","delete","deleteTable","getRecord","getRecords","limit","result","getImageUrl","fileName","ref","child","getDownloadURL","links","flexGrow","link","textDecoration","AppHeader","fbUser","useSelector","state","tables","isLoggedIn","svc","useEffect","Object","keys","length","objectKeys","mappedRecords","map","k","firebaseId","i","columnSvc","toLowerCase","columns","fields","getTables","React","profileAnchorEl","setAnchorEl","settingsAnchorEl","setSettingsAnchorEl","handleSettingsMenuClose","AppBar","position","Toolbar","IconButton","edge","aria-label","to","Typography","name","event","currentTarget","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","mainContainer","message","AppHome","fbSrvc","Container","Paper","elevation","Admin","onEnableImport","svcYacht","definition","summary","borderRadius","padding","imgContainer","pickImage","top","left","transform","fontSize","progress","CoreImage","initialUrl","onUrlChanged","_fileInput","fbUrl","setFBUrl","setProgress","isMouseOver","setIsMouseOver","onMouseOver","onMouseLeave","src","alt","style","Link","href","click","files","selectedFile","on","snapshot","percentage","Math","round","bytesTransferred","totalBytes","setTimeout","error","console","log","then","fileInput","CoreField","field","mode","onBlur","includes","xs","fullWidth","autoFocus","disabled","isReadOnly","autoComplete","component","multiline","rowsMax","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","newUrl","JSON","stringify","cardTitle","textAlign","backgroundColor","actionsContainerTopMain","actionsContainerTopButtons","convertToFirebaseType","typ","_typ","CoreForm","model","initialInputRecord","onAdded","onUpdated","onDeleted","onCancelled","importDMLOpen","importJSONOpen","SetState","title","importText","handleImport","rows","split","exec","newRecord","substring","initialValues","onSubmit","values","setSubmitting","forEach","f","childfields","svcChildren","childmodel","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","CardHeader","subheader","action","key","startIcon","Dialog","DialogTitle","DialogContent","dividers","required","DialogActions","tableIcons","Add","forwardRef","props","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","MoreDetails","toolbarContainer","importButton","alignSelf","textTransform","importUrlField","importChip","boxShadow","CoreList","records","onAdd","onDelete","onUpdate","onImport","importMessage","onImportUrlChange","onModelChange","summaryColumns","_","filter","sortedSummaryColumns","orderBy","r","icons","pluralName","actions","icon","tooltip","isFreeAction","rowData","iconProps","options","actionsColumnIndex","grouping","exportButton","localization","body","emptyDataSourceMessage","RecordsManager","initialMode","onRecordAdded","onRecordDeleted","onRecordUpated","importUrl","selectedRecord","setState","touchModel","emptyRecord","output","element","defaultValue","establishEmptyRecord","canLoadRecords","handleOnImport","importRecords","newImport","ik","normalizedKey","replace","matchingKey","find","Date","toISOString","deletedRecord","remainingRecords","x","updatedRecord","updatedRecords","c","rowdata","processed","toUpperCase","pluralize","sqlFields","sf","fieldParts","existingDefinitionRecord","readonly","some","s","Profile","withRouter","newDefinitions","PublicRoute","Component","restricted","rest","render","PrivateRoute","TableManager","tableModel","columnModel","table","addedRecord","DataManager","match","params","t","App","exact","path","initialState","rootReducer","remainingTables","cloneDeep","updateTable","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb9b904.chunk.js","sourcesContent":["import axios from 'axios';\nimport firebase from 'firebase/app'\nimport firebaseConfig from './firebaseConfig';\nimport 'firebase/storage';\n\nconst firebaseProj = firebaseConfig.projectId;\nlet tableName;\n\n\nfirebase.initializeApp(firebaseConfig);\n\nvar storage = firebase.storage();\n\nconst firebaseService = (fbTable) => {\n    tableName = fbTable;\n    return {\n        projId: firebaseProj,\n        importFrom: async (url) => {\n            const importedRecords = await axios.get(url);\n            return importedRecords;\n        },\n        createRecord: async (user, record) => {\n            const fbCustomer = await axios.post(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`, record);\n            return fbCustomer;\n        },\n        updateRecord: async (user, recordId, record) => {\n            await axios.put(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`, record);\n            return { ...record, id: recordId };\n        },\n        deleteRecord: async (user, recordId, record) => {\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\n            return { ...record, id: recordId };\n        },\n        deleteTable: async (user) => {\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\n        },\n        getRecord: async (user, recordId) => {\n            const fbCustomer = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\n            return fbCustomer;\n        },\n        getRecords: async (user, limit) => { // TODO: implement limit on number of records returned \n            const result = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\n            return result;\n        },\n        getImageUrl: async (fileName) => {\n            const url = await storage.ref('images').child(fileName).getDownloadURL();\n            return url;\n        }\n    }\n}\n\n\nexport { storage, firebaseService as default };\n","const firebaseConfig = {\n    apiKey: \"AIzaSyDxggzPT57iqEo-tohF6HqdpYj4YmIopnM\",\n    authDomain: \"my-project-1486841534385.firebaseapp.com\",\n    databaseURL: \"https://my-project-1486841534385.firebaseio.com\",\n    projectId: \"my-project-1486841534385\",\n    storageBucket: \"my-project-1486841534385.appspot.com\",\n    messagingSenderId: \"1064996410450\",\n    appId: \"1:1064996410450:web:bdb4a48fd567e062257b8b\"\n  };\n\n\n  export default firebaseConfig;","import axios from 'axios';\nimport firebaseConfig from './firebaseConfig';\n\nconst apiKey = firebaseConfig.apiKey;\nconst authService = {\n    webApiKey: apiKey,\n    signIn: async function signInService(user) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    },\n    signUp: async function signUpService(user) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    }\n\n};\n\nexport default authService;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport authService from '../../services/authService';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AlternateEmail, LockOutlined } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\nimport { CardContent, CardActions } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\n// TODO: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\n// TODO: use formik https://www.youtube.com/watch?v=TxEVnaISj1w\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        display: 'flex',\n        height: '30vh',\n        width: '30%',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        margin: '20px auto',\n    },\n    actionsContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    }\n}));\n\nconst SignIn = () => {\n    const dispatch = useDispatch();\n    const [user, setUser] = useState({ email: \"ayali@hotmail.com\", password: \"paris123\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const handleEmailChange = ({ target }) => {\n        setUser(u => u = { ...u, email: target.value });\n    }\n\n    const handlePasswordChange = ({ target }) => {\n        setUser(u => u = { ...u, password: target.value });\n    }\n\n    const handleSignIn = async () => {\n        const loginUser = await authService.signIn(user);\n        if (loginUser) {\n            dispatch({ type: 'SET_USER', user: loginUser.data });\n            history.push('/');\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Card className={classes.formContainer} raised={true}>\n                <form>\n                    <CardContent>\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                            <Grid item>\n                                <AlternateEmail />\n                            </Grid>\n                            <Grid item>\n                                <TextField value={user.email} label=\"Email Address\" onChange={handleEmailChange} />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                            <Grid item>\n                                <LockOutlined />\n                            </Grid>\n                            <Grid item>\n                                <TextField value={user.password} type=\"password\" label=\"Password\" onChange={handlePasswordChange} />\n                            </Grid>\n                        </Grid>\n\n                    </CardContent>\n\n                    <CardActions className={classes.actionsContainer}>\n                        <Button color='secondary' onClick={() => setUser({ email: \"\", password: \"\" })}> Reset </Button>\n                        <Button variant=\"contained\" color='primary' onClick={handleSignIn}> Login </Button>\n                    </CardActions>\n                </form>\n            </Card>\n        </React.Fragment>\n\n    )\n}\n\nexport default SignIn;","import React, { useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\nimport TuneOutlinedIcon from '@material-ui/icons/TuneOutlined';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport firebaseService from '../../services/firebaseService';\n\nconst useStyles = makeStyles((theme) => ({\n    links: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n    }\n}));\n\nconst AppHeader = () => {\n    const fbUser = useSelector((state) => state.user);\n    const tables = useSelector((state) => state.tables);\n    const dispatch = useDispatch();\n\n    const isLoggedIn = fbUser && fbUser.idToken;\n    const svc = firebaseService('table');\n    useEffect(() => {\n        async function getTables() {\n            if (isLoggedIn && Object.keys(tables).length === 0) {\n                const result = await svc.getRecords(fbUser);\n                if (result.data) {\n                    const objectKeys = Object.keys(result.data);\n                    // TODO: //Loop and fetch all field records TableName-firebaseId-columns\n                    const mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\n                    for (let i = 0; i < mappedRecords.length; i++) {\n                        const columnSvc = firebaseService(`table${mappedRecords[i].firebaseId}-column`.toLowerCase());\n                        const result = await columnSvc.getRecords(fbUser);\n                        if (result.data) {\n                            const objectKeys = Object.keys(result.data);\n                            const columns = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\n                            mappedRecords[i].fields = columns;\n                        }\n                    }\n\n                    dispatch({ type: 'SET_TABLES', tables: mappedRecords });\n                }\n            }\n        }\n        getTables();\n    }, [dispatch, fbUser, isLoggedIn, svc, tables]);\n    const classes = useStyles();\n    const [profileAnchorEl, setAnchorEl] = React.useState(null);\n    const [settingsAnchorEl, setSettingsAnchorEl] = React.useState(null);\n\n    const handleProfileMenuClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleProfileMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleProfileClick = () => {\n        setAnchorEl(null);\n    }\n\n    const handleLogout = () => {\n        // dispatch({ type: 'SET_USER', user: {} });\n        // history.push('/');\n    }\n\n    const handleSettingsMenuClick = (event) => {\n        setSettingsAnchorEl(event.currentTarget);\n    }\n\n    const handleSettingsMenuClose = () => {\n        setSettingsAnchorEl(null);\n    }\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <div className={classes.links}>\n                    {isLoggedIn && <Link to={`/`} className={classes.link}><Typography variant=\"button\">Home</Typography></Link>}\n                    {isLoggedIn && Object.keys(tables).length > 0 && Object.keys(tables).map(k => {\n                        return (<Link to={`/table/${tables[k].name.toLowerCase()}`} className={classes.link}><Typography variant=\"button\">{tables[k].name}</Typography></Link>)\n                    })}\n\n                </div>\n                {\n                    (!isLoggedIn) && <Link to=\"/signin\" className={classes.link}><Typography variant=\"button\">Login</Typography></Link>\n                }\n                {\n                    (isLoggedIn) &&\n                    (\n                        <>\n                            <IconButton edge=\"end\" color=\"inherit\">\n                                <HelpOutlineOutlinedIcon />\n                            </IconButton>\n\n                            <IconButton edge=\"end\" color=\"inherit\" onClick={handleSettingsMenuClick}>\n                                <TuneOutlinedIcon />\n                            </IconButton>\n\n                            <Menu\n                                anchorEl={settingsAnchorEl}\n                                keepMounted\n                                open={Boolean(settingsAnchorEl)}\n                                onClose={handleSettingsMenuClose}\n                            >\n                                <MenuItem onClick={handleSettingsMenuClose}><Link to=\"/table\">Tables</Link></MenuItem>\n                                <MenuItem onClick={handleSettingsMenuClose}><Link to=\"/admin\">Settings</Link></MenuItem>\n                            </Menu>\n\n                            <IconButton edge=\"end\" color=\"inherit\" onClick={handleProfileMenuClick}>\n                                <PermIdentityOutlinedIcon />\n                            </IconButton>\n\n                            <Menu\n                                anchorEl={profileAnchorEl}\n                                keepMounted\n                                open={Boolean(profileAnchorEl)}\n                                onClose={handleProfileMenuClose}\n                            >\n                                <MenuItem onClick={handleProfileClick}><Link to=\"/profile\">Profile</Link></MenuItem>\n                                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                            </Menu>\n                        </>\n                    )\n\n                }\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default AppHeader;","import React from 'react';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport authService from '../../services/authService'\nimport firebaseService  from '../../services/firebaseService'\nimport { useSelector } from 'react-redux';\n\n\nconst useStyles = makeStyles((theme) => ({\n    mainContainer: {\n        width: '80%',\n        height: '50vh',\n        margin: '30px auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    },\n    message: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    }\n\n}));\n\nconst AppHome = () => {\n    const fbUser = useSelector((state)=> state.user);\n    const isLoggedIn = fbUser && fbUser.idToken;\n    const classes = useStyles();\n    const fbSrvc = firebaseService();\n    return (\n        <Container className={classes.mainContainer}>\n            <Paper elevation={5} className={classes.message}>\n                {\n                    !isLoggedIn && <Typography>Welcome to Keepy! Web API Key {authService.webApiKey}, ProjId: {fbSrvc.projId}</Typography>\n                }\n                {\n                    isLoggedIn && <Typography color='primary'>{`Welcome, ${fbUser.localId} [aka: ${fbUser.email}]`}</Typography>\n                }\n            </Paper>\n        </Container>\n    )\n};\n\nexport default AppHome;","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport firebaseService from '../../services/firebaseService';\n\nconst Admin = ({ fbUser, onEnableImport }) => {\n\n    const svc = firebaseService('company');\n    const handleOnDeleteCustomers = () => {\n        svc.deleteTable(fbUser)\n    }\n\n    const svcYacht = firebaseService('yacht');\n    const handleOnDeleteYachts = () => {\n        svcYacht.deleteTable(fbUser)\n    }\n\n    const handleOnEnableImport = ()=> {\n        onEnableImport();\n    }\n    return (\n        <React.Fragment>\n            <Button color='primary' onClick={handleOnDeleteCustomers}>\n                Delete Companies\n            </Button>\n            <Button color='primary' onClick={handleOnDeleteYachts}>\n                Delete Yachts\n            </Button>\n            <Button color='primary' onClick={handleOnEnableImport}>\n                Enable Import\n            </Button>\n\n        </React.Fragment>\n    )\n}\n\nexport default Admin;","const definition = {\n  name: 'profile',\n  fields: [\n    { name: 'name', label: 'Name', summary: 1 },\n    { name: 'email', type: 'email', summary: 2  },\n    { name: 'phone', type: 'tel', summary: 3 },\n    { name: 'notes', type: 'textarea' },\n  ]\n}\n\n\nexport default definition;","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from '@material-ui/core';\nimport {storage} from '../../../services/firebaseService'\nimport { Card, CardContent } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles({\n    mainContainer: {\n        borderRadius: '8px',\n        position: 'relative',\n        width: '210px',\n        height: '210px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '10px'\n    },\n    imgContainer: {\n        width: '200px',\n        height: '200px',\n    },\n    pickImage: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'blue',\n        fontSize: '0.8em',\n    },\n    progress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    }\n});\n\nconst CoreImage = (initialUrl, onUrlChanged) => {\n    const [fbUrl, setFBUrl] = useState(initialUrl);\n    const [progress, setProgress] = useState('');\n    const [isMouseOver, setIsMouseOver] = useState(false);\n    const classes = useStyles();\n\n    const handleFileOnChange = (event) => {\n        if (event.target.files[0]) {\n            const selectedFile = event.target.files[0];\n            setFBUrl('');\n            const uploadTask = storage.ref(`images/${selectedFile.name}`).put(selectedFile);\n            uploadTask.on('state_changed',\n                (snapshot) => {\n                    const percentage = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100) + '%';\n                    setProgress(percentage);\n                    if (percentage === '100%') {\n                        setTimeout(() => {\n                            setProgress('')\n                        }, 2000);\n                    }\n                },\n                (error) => {\n                    console.log('error');\n                    console.log(error);\n                },\n                () => {\n                    storage.ref('images').child(selectedFile.name).getDownloadURL().then(url => {\n                        setFBUrl(url);\n                        // onUrlChanged(url);\n                    })\n                }\n            )\n        }\n    }\n    let _fileInput;\n    return (\n        <React.Fragment>\n            <Card className={classes.mainContainer} onMouseOver={() => setIsMouseOver(true)} onMouseLeave={() => setIsMouseOver(false)} >\n                <CardContent>\n                    <img src={fbUrl} alt={fbUrl || 'image'} className={classes.imgContainer} style={{ display: fbUrl ? 'block' : 'none' }}></img>\n                    <Link href=\"#\" className={classes.pickImage} style={{ display: isMouseOver ? 'block' : 'none' }} onClick={() => _fileInput.click()}>Change Image</Link>\n                    <div className={classes.progress} style={{ display: progress ? 'block' : 'none' }}>{progress}</div>\n\n                </CardContent>\n            </Card>\n            <input\n                type=\"file\"\n                onChange={handleFileOnChange}\n                style={{ display: 'none' }}\n                ref={fileInput => _fileInput = fileInput}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default CoreImage;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { ErrorMessage } from 'formik';\nimport CoreImage from './CoreImage';\n\nconst CoreField = ({ field, mode, onChange, onBlur, value }) => {\n\n    const handleUrlChanged = (newUrl)=>{\n\n    }\n\n    return (\n        <React.Fragment>\n            {((['text', 'tel', 'email'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        autoComplete=\"off\"\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n            {((['textarea'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        multiline\n                        rowsMax={4}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['number'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['date'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['checkbox'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={value}\n                                onChange={onChange}\n                                name={field.name}\n                                color=\"primary\"\n                                disabled={mode === 2 || (field.isReadOnly)}\n                            />\n                        }\n                        label={field.label}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n                {((['file'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <CoreImage \n                    name={field.name}\n                    disabled={mode === 2 || (field.isReadOnly)}\n                    initialUrl={value}\n                    onUrlChanged={handleUrlChanged}\n                    />\n                    <div>{value} {JSON.stringify(value)}</div>\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n        </React.Fragment>\n\n    )\n}\n\nexport default CoreField;","import { Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport firebaseService from '../../../services/firebaseService';\nimport CoreField from './CoreField';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        width: '90%',\n        margin: '25px auto',\n    },\n    cardTitle: {\n        textAlign: 'left',\n        fontSize: '2em',\n        backgroundColor: 'silver',\n    },\n    actionsContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '10px',\n        backgroundColor: 'silver',\n    },\n    actionsContainerTopMain: {\n        width: '50%',\n        padding: '10px',\n    },\n    actionsContainerTopButtons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    }\n}));\n\nconst CoreForm = ({ mode, model, initialInputRecord, onAdded, onUpdated, onDeleted, onCancelled }) => {\n\n    const [state, SetState] = useState({\n        importDMLOpen: false,\n        importJSONOpen: false,\n    });\n    const classes = useStyles();\n    const svc = firebaseService(model.name.toLowerCase());\n    const title = (mode) => {\n        switch (mode) {\n            case 1:\n                return 'Create ' + model.name;\n            case 2:\n                return 'Delete ' + model.name;\n            case 3:\n                return 'Update ' + model.name;\n            default:\n                break;\n        }\n    }\n    const fbUser = useSelector((state) => state.user);\n\n    // const handleImageChange = ()=> {\n    //     // TODO: when image changes store it to the database using the record key and its field name\n    // }\n\n    let importText = '';\n    const handleImportChange = (event) => {\n        importText = event.target.value;\n    }\n\n    const handleImport = async () => {\n        const rows = importText.split('\\n');\n        for (let i = 0; i < rows.length; i++) {\n            let regex = /(\\w*?)\\s(\\w*)/g;\n            let [, name, type] = regex.exec(rows[i]) || [];\n            if (name) {\n                let newRecord = {initialInputRecord};\n                newRecord.name = name.substring(0, 1).toLowerCase() + name.substring(1);\n                newRecord.label = name;\n                newRecord.type = convertToFirebaseType(type);\n                svc.createRecord(fbUser, newRecord);\n            }\n        }\n        SetState({ ...state, importDMLOpen: false });\n        // onAdded({ ...newRecord});\n    }\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={initialInputRecord}\n                onSubmit={async (values, { setSubmitting }) => {\n                    const newRecord = {};\n                    model.fields.forEach(f => newRecord[f.name] = values[f.name]);\n                    if (mode === 1) {\n                        const result = await svc.createRecord(fbUser, newRecord);\n                        onAdded({ ...values, firebaseId: result.data.name });\n                    } else if (mode === 2) {\n                        await svc.deleteRecord(fbUser, initialInputRecord.firebaseId, newRecord);\n                        if (model.childfields) {\n                            const svcChildren = firebaseService(`${model.name}-${model.childmodel}${initialInputRecord.firebaseId}`.toLowerCase());\n                            await svcChildren.deleteTable(fbUser);\n                        }\n                        onDeleted(values);\n                    } else if (mode === 3) {\n                        await svc.updateRecord(fbUser, initialInputRecord.firebaseId, newRecord);\n                        onUpdated(values);\n                    }\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form onSubmit={handleSubmit} >\n                            <Card raised className={classes.formContainer}>\n                                <CardHeader className={classes.cardTitle}\n                                    title={title(mode)}\n                                    subheader={`${values.firebaseId}` || ''}\n                                    action={\n                                        <CancelOutlinedIcon color='secondary' onClick={onCancelled} />\n                                    }\n                                />\n                                <CardContent>\n                                    <Grid container spacing={3}>\n                                        {model.fields.map(f => <CoreField key={f.name} field={f} value={values[f.name]} mode={mode} onChange={handleChange} onBlur={handleBlur} />)}\n                                    </Grid>\n\n                                </CardContent>\n                                <CardActions className={classes.actionsContainer}>\n                                    <div>\n                                        <Button type=\"button\" disabled={isSubmitting} color='secondary' onClick={() => SetState({ ...state, importJSONOpen: true })} >Import JSON</Button>\n                                        <Button type=\"button\" disabled={isSubmitting} color='secondary' onClick={() => SetState({ ...state, importDMLOpen: true })} >Import DML</Button>\n                                    </div>\n                                    <div>\n                                        <Button type=\"button\" disabled={isSubmitting} variant=\"contained\" color='secondary' onClick={onCancelled} startIcon={<CancelOutlinedIcon />}>Cancel</Button>\n                                        {(mode === 1) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<AddOutlinedIcon />}>Create</Button>}\n                                        {(mode === 2) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='secondary' startIcon={<DeleteOutlinedIcon />}>Delete</Button>}\n                                        {(mode === 3) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<SaveOutlinedIcon />}>Save</Button>}\n                                    </div>\n                                </CardActions>\n                            </Card>\n                        </form>\n                    )}\n\n            </Formik>\n            <Dialog open={state.importDMLOpen} onClose={() => SetState({ ...state, importDMLOpen: false })} style={{ width: '90%' }}>\n                <DialogTitle>\n                    Import columns\n                </DialogTitle>\n                <DialogContent dividers>\n                    <TextField label=\"Names\" autoFocus fullWidth multiline required rows=\"10\" variant='outlined' onChange={handleImportChange}>\n\n                    </TextField>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={handleImport}>\n                        Import\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nfunction convertToFirebaseType(typ) {\n    const _typ = typ.toLowerCase();\n    if (_typ.includes('int')) return 'number';\n    if (_typ.includes('bit')) return 'checkbox';\n\n    return 'text'\n\n}\n\nexport default CoreForm;","import React from 'react'\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport DetailsIcon from '@material-ui/icons/Details';\nimport { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport _ from 'lodash';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  MoreDetails: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />),\n\n};\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px',\n  },\n  importButton: {\n    alignSelf: 'stretch',\n    textTransform: 'none',\n  },\n  importUrlField: {\n    width: '30%',\n  },\n  importChip: {\n    width: '30%',\n    backgroundColor: 'Teal',\n    boxShadow: '2px 2px silver',\n    padding: '10px',\n    color: 'white',\n    borderRadius: '16px',\n    fontSize: '0.8em',\n    textAlign: 'center'\n  }\n}));\n\nconst CoreList = ({ model, records, onAdd, onDelete, onUpdate, onImport, importMessage, onImportUrlChange, onModelChange }) => {\n  const summaryColumns = _.filter(model.fields, (f)=> !!f.summary);\n  const sortedSummaryColumns = _.orderBy(summaryColumns, ['summary', ['asc']]).map(r => { return { title: r.label, field: r.name } });\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {(importMessage) &&\n        <div className={classes.toolbarContainer}>\n          <TextField className={classes.importUrlField} onChange={onImportUrlChange} label=\"Import url\"></TextField>\n          <div className={classes.importChip} > {importMessage} </div>\n          <Button onClick={onImport} color='secondary' className={classes.importButton}>Import</Button>\n        </div>\n      }\n      <MaterialTable icons={tableIcons}\n        title={model.pluralName}\n        columns={sortedSummaryColumns}\n        data={records}\n        actions={[\n          {\n            icon: tableIcons.Add,\n            tooltip: 'Add ' + model.name,\n            isFreeAction: true,\n            onClick: (event) => onAdd()\n          },\n          {\n            icon: tableIcons.MoreDetails,\n            tooltip: 'Details ' + model.name,\n            onClick: (event, rowData) => {\n              onModelChange(rowData);\n            }\n          },\n          {\n            icon: tableIcons.Edit,\n            tooltip: 'Edit ' + model.name,\n            onClick: (event, rowData) => {\n              onUpdate(rowData);\n            }\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: 'Delete ' + model.name,\n            iconProps: {\n              style: 'color: \"red\"',\n            },\n            onClick: (event, rowData) => {\n              onDelete(rowData);\n            }\n          }\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n          grouping: false,\n          exportButton: true,\n        }}\n        localization={{\n          body: {\n            emptyDataSourceMessage: `No ${model.name}s to display, import or add ${model.name}s by clicking the plus sign above.`,\n          },\n        }}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CoreList;","import React, { useState, useEffect } from 'react';\nimport CoreForm from './components/CoreForm';\nimport CoreList from './components/CoreList';\nimport pluralize from 'pluralize'\nimport firebaseService from '../../services/firebaseService';\nimport _ from 'lodash';\nimport { useSelector } from 'react-redux';\n\n\nconst RecordsManager = ({ model, initialMode, onModelChange , onRecordAdded, onRecordDeleted, onRecordUpated}) => {\n    const [state, setState] = useState({\n        importMessage: '',\n        importUrl: '',\n        records: [],\n        selectedRecord: {},\n        mode: initialMode,\n    });\n    model = touchModel(model);\n    const fbUser = useSelector((state) => state.user);\n    const svc = firebaseService(model.name.toLowerCase());\n    const emptyRecord = establishEmptyRecord(model);\n\n    useEffect(() => {\n        async function getRecords() {\n            if (canLoadRecords(state, model, fbUser)) {\n                const result = await svc.getRecords(fbUser);\n                if (result && result.data) {\n                    const objectKeys = Object.keys(result.data);\n                    const mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\n                    setState({ ...state, records: mappedRecords });\n                }\n            }\n        }\n        getRecords();\n    }, [fbUser, svc, state, model, emptyRecord]);\n\n    if (!model){\n        return null;\n    }\n    const handleOnAdded = (newRecord) => {\n        setState({ ...state, mode: 0, records: [...state.records, newRecord] });\n        onRecordAdded(newRecord);\n    };\n    const handleOnUpdated = (updatedRecord) => {\n        const updatedRecords = state.records.map(c => c.firebaseId === updatedRecord.firebaseId ? updatedRecord : c);\n        setState({ ...state, mode: 0, records: updatedRecords });\n        onRecordUpated(updatedRecord);\n    };\n    const handleOnDeleted = (deletedRecord) => {\n        const remainingRecords = state.records.filter(x => x.firebaseId !== deletedRecord.firebaseId);\n        setState({ ...state, mode: 0, records: remainingRecords });\n        onRecordDeleted(deletedRecord);\n    };\n    const handleOnCancelled = () => {\n        setState({ ...state, mode: 0 });\n    };\n    const handleOnAdd = () => {\n        setState({ ...state, mode: 1, selectedRecord: emptyRecord });\n    };\n    const handleOnDelete = (deleteRecord) => {\n        setState({ ...state, mode: 2, selectedRecord: deleteRecord });\n    };\n    const handleOnUpdate = (updateRecord) => {\n        setState({ ...state, mode: 3, selectedRecord: updateRecord });\n    };\n    const handleOnDetails = (rowdata) => {\n        setState({...state, records:[]})\n        onModelChange(rowdata.firebaseId);\n    }\n\n    const handleOnImport = async () => {\n        try {\n            if (!state.importUrl) {\n                return setState({ ...state, importMessage: 'Please enter import url...' });\n            }\n            const importRecords = await (await svc.importFrom(state.importUrl)).data;\n            setState({ ...state, importMessage: `Found ${importRecords.length} ${model.name} records. Importing...` });\n            importRecords.forEach(r => {\n                setTimeout(() => {\n                    const newImport = {};\n                    const importedKeys = Object.keys(r);\n                    importedKeys.forEach(ik => {\n                        const normalizedKey = ik.replace('_', '').toLowerCase();\n                        //Find this normalizedKey in the definition\n                        const matchingKey = _.find(model.fields, (f) => f.name.toLowerCase() === normalizedKey);\n                        if (matchingKey && matchingKey.name) {\n                            if (matchingKey.type === 'date') {\n                                newImport[matchingKey.name] = (new Date(r[ik]).toISOString().substring(0, 10));\n                            } else {\n                                newImport[matchingKey.name] = r[ik];\n                            }\n                        }\n                    })\n                    svc.createRecord(fbUser, newImport);\n                    setState({ ...state, importMessage: `Importing ${model.name} record# ${newImport[model.fields[0].name]}`, records: [...state.records, newImport] });\n                }, 2000)\n            });\n        } catch (err) {\n            setState({ ...state, importMessage: err.message });\n        }\n    };\n    const handleImportUrlChange = (event) => {\n        setState({ ...state, importUrl: event.target.value });\n    }\n    return (\n        <React.Fragment>\n            {\n                state.mode ?\n                    <CoreForm \n                    mode={state.mode} \n                    model={model} \n                    initialInputRecord={state.selectedRecord} \n                    onAdded={handleOnAdded} \n                    onDeleted={handleOnDeleted} \n                    onUpdated={handleOnUpdated} \n                    onCancelled={handleOnCancelled}\n                    /> :\n                    <CoreList \n                    model={model}  \n                    records={state.records} \n                    onAdd={handleOnAdd} \n                    onDelete={handleOnDelete} \n                    onUpdate={handleOnUpdate} \n                    onImport={handleOnImport} \n                    importMessage={state.importMessage} \n                    onImportUrlChange={handleImportUrlChange} \n                    onModelChange={handleOnDetails}\n                    />\n            }\n        </React.Fragment >\n    )\n}\n\nfunction establishEmptyRecord(model) {\n    const output = {};\n    if (model && model.fields) {\n        model.fields.forEach(element => {\n            output[element.name] = element.defaultValue;\n        });\n    }\n    return output;\n}\n\nfunction touchModel(model) {\n    if (!model || !model.name || !model.fields) return null;\n    if (model.processed) return model;\n    model.name = model.name[0].toUpperCase() + model.name.toLowerCase().substring(1);\n    model.pluralName = pluralize(model.name);\n    if (model.sqlFields) {\n        if (!model.fields) model.fields = [];\n        const fields = model.sqlFields.split('\\n');\n        fields.forEach(sf => {\n            const fieldParts = sf.replace(/ /g, '').split('\\t');\n            const name = fieldParts[0][0].toLowerCase() + fieldParts[0].substring(1);\n            const label = fieldParts[0];\n            let type = '';\n            if (fieldParts[1].includes('char')) {\n                type = 'text';\n            } else if (fieldParts[1].includes('bit')) {\n                type = 'checkbox';\n            } else if (fieldParts[1].includes('datetime')) {\n                type = 'date';\n            } else if (fieldParts[1].includes('int')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('money')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('decimal')) {\n                type = 'number';\n            }\n\n            const existingDefinitionRecord = _.find(model.fields, (f) => f.name === fieldParts[0]);\n            if (existingDefinitionRecord) {\n                existingDefinitionRecord.label = label;\n                existingDefinitionRecord.type = type;\n                existingDefinitionRecord.name = name;\n            } else {\n                model.fields.push({\n                    name,\n                    label,\n                    type\n                })\n            }\n\n        });\n    }\n\n    // reassure all fields have type, label, summary, default value and readonly flag\n    model.fields = model.fields.map(f => {\n        const label = (f.label || (f.name[0].toUpperCase() + f.name.substring(1)));\n        const type = (f.type || 'text');\n        const summary = f.summary || 0;\n        const defaultValue = f.defaultValue || '';\n        const readonly = f.readonly || false;\n        return {\n            ...f,\n            label,\n            type,\n            summary,\n            readonly,\n            defaultValue,\n        };\n    });\n\n    // reassure least one summary column\n    if (!model.fields.some(s => s.summary)) {\n        model.fields[0].summary = 1;\n    }\n    // reassure least one autofocus column\n    if (!model.fields.some(s => s.autoFocus)) {\n        model.fields[0].autoFocus = true;\n    }\n\n    model.processed = true;\n    return model;\n}\n\nfunction canLoadRecords(state, model, fbUser){\n    return (state.records.length ===0  &&  (!state.mode || state.mode === 0) && fbUser && model && model.fields)\n}\n\nexport { touchModel, RecordsManager as default };","import React from 'react';\nimport definition from './definition';\nimport CoreForm from '../RecordsManager/components/CoreForm';\nimport {withRouter} from 'react-router-dom';\nimport  {touchModel} from '../RecordsManager/RecordsManager';\n\nconst Profile = withRouter(({fbUser})=> {\n\n\n    const handleOnUpdated = ()=> {\n\n    };\n\n    const handleOnCancelled = ()=> {\n\n    };\n\n    const selectedRecord = {\n        firebaseId: 'default'\n    }\n    const newDefinitions = touchModel(definition);\n    return (\n        <CoreForm mode={3} model={newDefinitions} initialInputRecord={selectedRecord} fbUser={fbUser} onUpdated={handleOnUpdated} onCancelled={handleOnCancelled}></CoreForm>\n    )\n});\n\nexport default Profile;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    const fbUser = useSelector((state) => state.user);\n    const isLoggedIn = fbUser && fbUser.idToken;\n    return (\n        <Route {...rest} render={props => (\n            isLoggedIn && restricted ?\n                <Redirect to=\"/\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const fbUser = useSelector((state)=> state.user);\n    const isLoggedIn = fbUser && fbUser.idToken;\n    return (\n\n        <Route {...rest} render={props => (\n            isLoggedIn ?\n                <Component {...props} />\n            : <Redirect to=\"/signin\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","const model = {\n  name: 'table',\n  child: 'column',\n  fields: [\n    { name: 'name', label: 'Table name' },\n    { name: 'child', label: 'Child name' },\n    {name: 'enabled', label: 'Active', type: 'checkbox', defaultValue: true}\n  ]\n}\n\nexport default model;","const model = {\n  name: 'column',\n  fields: [\n    { name: 'name', label: 'Name',  summary: 1},\n    {name: 'type', label: 'Type', summary: 2},\n    {name: 'label', label: 'Label', summary: 3},\n    {name: 'defaultValue', label: 'Default Value', summary: 4},\n    {name: 'summary', label: 'List Order', summary: 5},\n  ]\n}\n\n\nexport default model;","import React, { useState } from 'react';\nimport tableModel from './model';\nimport columnModel from './model_paper';\nimport RecordsManager from '../RecordsManager/RecordsManager';\nimport { useDispatch } from 'react-redux';\n\nconst TableManager = () => {\n\n    const [state, setState] = useState({\n        model: tableModel\n    });\n\n    const dispatch = useDispatch();\n    const handleModelChange = (firebaseId) => {\n        if (state.model.child && state.model.child === 'column') {\n            columnModel.name = `${state.model.name}${firebaseId}-${state.model.child}`\n            setState({ model: columnModel });\n        }\n    }\n\n    const handleDeletedRecord = (deletedRecord)=> {\n        dispatch({ type: 'DELETE_TABLE', table: deletedRecord });\n    }\n    const handleAddRecord = (addedRecord)=> {\n        dispatch({ type: 'ADD_TABLE', table: addedRecord });\n    }\n    const handleUpdateRecord = (updateRecord)=> {\n        dispatch({ type: 'UPDATE_TABLE', table: updateRecord });\n    }\n\n    return (\n        <RecordsManager \n        model={state.model} \n        onModelChange={handleModelChange} \n        onRecordDeleted={handleDeletedRecord}\n        onRecordAdded={handleAddRecord}\n        onRecordUpated={handleUpdateRecord}\n        />\n    )\n}\n\nexport default TableManager;","import React from 'react';\nimport RecordsManager from '../RecordsManager/RecordsManager';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nconst DataManager = ({ match }) => {\n    const tableName = match.params.tableName;\n\n    const dispatch = useDispatch();\n    const tables = useSelector(s => s.tables);\n    const model = _.find(tables, (t) => t.name.toLowerCase() === tableName.toLowerCase());\n    const handleModelChange = (firebaseId) => {\n        if (model.child) {\n            // columnModel.name = `${state.model.name}${firebaseId}-${state.model.child}`\n            // setState({ model: columnModel });\n        }\n    }\n\n    const handleDeletedRecord = (deletedRecord) => {\n        dispatch({ type: 'DELETE_DATA', table: deletedRecord });\n    }\n    const handleAddRecord = (addedRecord) => {\n        dispatch({ type: 'ADD_DATA', table: addedRecord });\n    }\n    const handleUpdateRecord = (updateRecord) => {\n        dispatch({ type: 'UPDATE_DATA', table: updateRecord });\n    }\n\n    return (\n        model.name ?\n            <RecordsManager\n                model={model}\n                onModelChange={handleModelChange}\n                onRecordDeleted={handleDeletedRecord}\n                onRecordAdded={handleAddRecord}\n                onRecordUpated={handleUpdateRecord}\n            />\n            : null\n\n    )\n}\n\nexport default DataManager;","import React from 'react';\n// import SignUp from './features/auth/SignUp';\nimport SignIn from './features/auth/SignIn';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppHeader from './features/AppHeader/AppHeader';\nimport AppHome from './features/AppHome/AppHome';\nimport Admin from './features/Admin/Admin'\nimport Profile from './features/Profile/Profile'\nimport PublicRoute from './features/auth/PublicRoute';\nimport PrivateRoute from './features/auth/PrivateRoute';\nimport TableManager from './features/TableManager/TableManager';\nimport DataManager from './features/DataManager/DataManager';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AppHeader></AppHeader>\n      <PublicRoute exact path=\"/\" component={AppHome}></PublicRoute>\n      <PublicRoute restricted={true} exact path=\"/signin\" component={SignIn}></PublicRoute>\n      <PrivateRoute exact path=\"/admin\" component={Admin}></PrivateRoute>\n      <PrivateRoute exact path=\"/profile\" component={Profile}></PrivateRoute>\n      <PrivateRoute exact path=\"/table\" component={TableManager}></PrivateRoute>\n      <PrivateRoute exact path=\"/table/:tableName\" component={DataManager}></PrivateRoute>\n    </Router>\n  );\n}\n\nexport default App;\n","import _ from 'lodash';\n\nconst initialState = {\n    user: {},\n    tables: []\n}\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_USER':\n            return { ...state, user: action.user };\n        case 'SET_TABLES':\n            return { ...state, tables: action.tables };\n        case 'DELETE_TABLE':\n            const remainingTables = _.filter(state.tables, x => x.firebaseId !== action.table.firebaseId);\n            return { ...state, tables: remainingTables };\n        case 'ADD_TABLE':\n            return { ...state, tables: [...state.tables, action.table] };\n        case 'UPDATE_TABLE':\n            const tables = _.cloneDeep(state.tables);\n            const updateTable = _.find(tables, x => x.firebaseId === action.table.firebaseId);\n            updateTable.name = action.table.name;\n            return { ...state, tables};\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} ><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}