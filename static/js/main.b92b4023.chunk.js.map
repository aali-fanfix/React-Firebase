{"version":3,"sources":["services/firebaseService.js","services/authService.js","features/auth/SignIn.js","features/Customers/definition.js","features/RecordsManager/components/CoreField.js","features/RecordsManager/components/CoreForm.js","features/RecordsManager/components/CoreList.js","features/RecordsManager/RecordsManager.js","features/Customers/CustomersManager.js","features/AppHeader/AppHeader.js","features/Contacts/definition.js","features/Contacts/ContactsManager.js","features/AppHome/AppHome.js","features/YachtsManager/definition.js","features/YachtsManager/YactsManager.js","features/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["tableName","apiKey","authService","webApiKey","signIn","user","a","axios","post","returnSecureToken","fbuser","signUp","useStyles","makeStyles","theme","formContainer","display","height","width","flexDirection","justifyContent","alignItems","margin","signInButton","alignSelf","marginLeft","SignIn","onSignedIn","useState","email","password","setUser","classes","history","useHistory","handleSignIn","push","data","Fragment","className","Grid","container","spacing","item","AlternateEmail","TextField","value","label","onChange","target","u","LockOutlined","type","Button","variant","color","onClick","definition","name","fields","summary","sqlFields","firebaseProj","firebaseService","fbTable","projId","importFrom","url","get","importedRecords","createRecord","record","localId","idToken","fbCustomer","updateRecord","recordId","put","id","deleteRecord","delete","deleteTable","getRecord","getRecords","limit","result","CoreField","field","mode","onBlur","includes","xs","fullWidth","autoFocus","disabled","isReadOnly","component","multiline","rowsMax","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","cardTitle","textAlign","fontSize","backgroundColor","actionsContainer","padding","actionsContainerTopMain","actionsContainerTopButtons","CoreForm","fbUser","initialInputRecord","onAdded","onUpdated","onDeleted","onCancelled","svc","toLowerCase","title","initialValues","onSubmit","values","setSubmitting","newRecord","forEach","f","firebaseId","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Card","raised","CardHeader","subheader","action","CardContent","map","key","CardActions","startIcon","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","toolbarContainer","importButton","textTransform","importUrlField","importChip","boxShadow","borderRadius","CoreList","records","onAdd","onDelete","onUpdate","onImport","importMessage","onImportUrlChange","summaryColumns","_","filter","sortedSummaryColumns","orderBy","r","enableImport","icons","pluralName","columns","actions","icon","tooltip","isFreeAction","event","rowData","iconProps","style","options","actionsColumnIndex","localization","body","emptyDataSourceMessage","RecordsManager","setImportMessage","importUrl","setImportUrl","setRecords","processed","toUpperCase","substring","pluralize","split","sf","fieldParts","replace","existingDefinitionRecord","find","defaultValue","readonly","some","s","autofocus","normalizeDefinition","initialRecords","element","selectedRecord","setSelectedRecord","setMode","useEffect","length","objectKeys","Object","keys","mappedRecords","k","handleOnImport","importRecords","setTimeout","newImport","ik","normalizedKey","matchingKey","Date","toISOString","message","deletedRecord","remainingRecords","x","updatedRecord","updatedRecords","c","CustomersManager","links","flexGrow","link","textDecoration","AppHeader","onSignout","AppBar","position","Toolbar","IconButton","edge","aria-label","to","Typography","isKey","isSummary","summaryOrder","editOrder","ContactsManager","mainContainer","AppHome","fbSrvc","Container","Paper","elevation","YachtsManager","Admin","onEnableImport","App","User","appState","setAppState","handleOnSignedIn","handleOnEnableImport","newState","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b92b4023.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst firebaseProj = 'my-project-1486841534385';\nlet tableName;\n\nconst firebaseService = (fbTable) => {\n    tableName = fbTable;\n    return {\n        projId: firebaseProj,\n        importFrom: async (url) => {\n            const importedRecords = await axios.get(url);\n            return importedRecords;\n        },\n        createRecord: async (user, record) => {\n            const fbCustomer = await axios.post(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`, record);\n            return fbCustomer;\n        },\n        updateRecord: async (user, recordId, record) => {\n            await axios.put(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`, record);\n            return { ...record, id: recordId };\n        },\n        deleteRecord: async (user, recordId, record) => {\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\n            return { ...record, id: recordId };\n        },\n        deleteTable: async (user) => {\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\n        },\n        getRecord: async (user, recordId) => {\n            const fbCustomer = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\n            return fbCustomer;\n        },\n        getRecords: async (user, limit) => { // TODO: implement limit on number of records returned \n            const result = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\n            return result;\n        }\n    }\n}\n\n\nexport default firebaseService;\n","import axios from 'axios';\nconst apiKey = 'AIzaSyDxggzPT57iqEo-tohF6HqdpYj4YmIopnM';\nconst authService = {\n    webApiKey: apiKey,\n    signIn: async function signInService(user) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    },\n    signUp: async function signUpService(user) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    }\n\n};\n\nexport default authService;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport authService from '../../services/authService';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AlternateEmail, LockOutlined } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\n\n// TODO: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\n// TODO: use formik https://www.youtube.com/watch?v=TxEVnaISj1w\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        display: 'flex',\n        height: '30vh',\n        width: '30%',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        margin: '10px auto',\n    },\n    signInButton: {\n        alignSelf: 'flex-start',\n        marginLeft: '40px',\n    }\n}));\n\nconst SignIn = ({ onSignedIn }) => {\n    const [user, setUser] = useState({ email: \"ayali@hotmail.com\", password: \"paris123\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const handleEmailChange = ({ target }) => {\n        setUser(u => u = { ...u, email: target.value });\n    }\n\n    const handlePasswordChange = ({ target }) => {\n        setUser(u => u = { ...u, password: target.value });\n    }\n\n    const handleSignIn = async () => {\n        const fbuser = await authService.signIn(user);\n        history.push('/');\n        onSignedIn(fbuser.data);\n    }\n\n    return (\n        <React.Fragment>\n            <form className={classes.formContainer}>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                        <AlternateEmail />\n                    </Grid>\n                    <Grid item>\n                        <TextField value={user.email} label=\"Email Address\" onChange={handleEmailChange} />\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                        <LockOutlined />\n                    </Grid>\n                    <Grid item>\n                        <TextField value={user.password} type=\"password\" label=\"Password\" onChange={handlePasswordChange} />\n                    </Grid>\n                </Grid>\n\n                <Button className={classes.signInButton} variant=\"contained\" color='primary' onClick={handleSignIn}> Login </Button>\n            </form>\n        </React.Fragment>\n    )\n}\n\nexport default SignIn;","const definition = {\n  name: 'Company',\n  fields: [\n    {name: 'Name', summary: 1},\n    {name: 'NameArabic', summary: 2},\n    {name: 'ContactPerson', summary: 3},\n    {name: 'Nationality', summary: 4},\n    {name: 'Tel', summary: 5, type: 'tel'},\n    {name: 'CompanyId', summary: 6},\n    {name: 'Comments', type: 'textarea'},\n    {name: 'ExpireDate', type: 'date'},\n    {name: 'KSATel', type: 'tel'},\n  ],\n  sqlFields: `Name\tnvarchar\n    NameArabic\tnvarchar\n    ContactPerson\tnvarchar\n    Address\tnvarchar\n    Email\tvarchar\n    Website\tvarchar\n    Tel\tvarchar\n    CreateDt\tdatetime\n    CompanyCode\tvarchar\n    Comments\tnvarchar\n    IsOnHold\tbit\n    LogoUrl\tvarchar\n    UserName\tvarchar\n    UserEmail\tvarchar\n    Password\tvarchar\n    CompanyId\tint\n    ExpireDate\tdatetime\n    KSATel\tvarchar\n    MunazemNumber\tvarchar\n    Nationality\tnvarchar\n    IsAdmin\tbit\n    WayToUmrahCompanyCode\tvarchar\n    WayToUmrahAgentCode\tvarchar\n    MOFAEmbassy\tvarchar\n    MotawefNumber\tvarchar\n    BabUmraUserName\tvarchar\n    BabUmraPassword\tvarchar\n    BabUmraEACode\tvarchar\n    Quota\tint\n    IsHajOnSoftAgent\tbit\n    Feedback\tvarchar\n    ehajusername\tvarchar\n    ehajpassword\tvarchar\n    gamausername\tvarchar\n    gamapassword\tvarchar\n    waytoumrahUserName\tvarchar\n    waytoumrahPassword\tvarchar\n    MotEgpUserName\tvarchar\n    MotEgpPassword\tvarchar\n    TawafUserName\tvarchar\n    TawafPassword\tvarchar\n    SaudiWakeelId\tint\n    GoogleSecret\tvarchar\n    IsICanSupport\tbit\n    IsHeCanSupport\tbit\n    SupportTel\tnvarchar\n    waytoumrahemail\tvarchar\n    waytoumrahemailpassword\tvarchar`\n}\nexport default definition;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { ErrorMessage } from 'formik';\n\nconst CoreField = ({ field, mode, onChange, onBlur, value }) => {\n\n\n    return (\n        <React.Fragment>\n            {((['text', 'tel', 'email'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n            {((['textarea'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        multiline\n                        rowsMax={4}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['number'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['date'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['checkbox'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={value}\n                                onChange={onChange}\n                                name={field.name}\n                                color=\"primary\"\n                                disabled={mode === 2 || (field.isReadOnly)}\n                            />\n                        }\n                        label={field.label}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n        </React.Fragment>\n\n    )\n}\n\nexport default CoreField;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport firebaseService from '../../../services/firebaseService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport CoreField from './CoreField';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        width: '90%',\n        margin: '25px auto',\n    },\n    cardTitle: {\n        textAlign: 'left',\n        fontSize: '2em',\n        backgroundColor: 'silver',\n    },\n    actionsContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        padding: '10px',\n        backgroundColor: 'silver',\n    },\n    actionsContainerTopMain: {\n        width: '50%',\n        padding: '10px',\n    },\n    actionsContainerTopButtons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    }\n}));\n\nconst CoreForm = ({ fbUser, mode, definition, initialInputRecord, onAdded, onUpdated, onDeleted, onCancelled }) => {\n\n    const classes = useStyles();\n    const svc = firebaseService(definition.name.toLowerCase());\n    const title = (mode) => {\n        switch (mode) {\n            case 1:\n                return 'Create ' + definition.name;\n            case 2:\n                return 'Delete ' + definition.name;\n            case 3:\n                return 'Update ' + definition.name;\n            default:\n                break;\n        }\n    }\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={initialInputRecord}\n                onSubmit={async (values, { setSubmitting }) => {\n                    const newRecord = {};\n                    definition.fields.forEach(f => newRecord[f.name] = values[f.name]);\n                    if (mode === 1) {\n                        const result = await svc.createRecord(fbUser, newRecord);\n                        onAdded({ ...values, firebaseId: result.data.name });\n                    } else if (mode === 2) {\n                        await svc.deleteRecord(fbUser, initialInputRecord.firebaseId, newRecord);\n                        onDeleted(values);\n                    } else if (mode === 3) {\n                        await svc.updateRecord(fbUser, initialInputRecord.firebaseId, newRecord);\n                        onUpdated(values);\n                    }\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form onSubmit={handleSubmit} >\n                            <Card raised className={classes.formContainer}>\n                                <CardHeader className={classes.cardTitle}\n                                    title={title(mode)}\n                                    subheader={`${values.firebaseId}`}\n                                    action={\n                                        <CancelOutlinedIcon color='secondary' onClick={onCancelled} />\n                                    }\n                                />\n                                <CardContent>\n                                    <Grid container  spacing={3}>\n                                        {definition.fields.map(f => <CoreField key={f.name} field={f} value={values[f.name]} mode={mode} onChange={handleChange} onBlur={handleBlur}/>)}\n                                    </Grid>\n\n                                </CardContent>\n                                <CardActions className={classes.actionsContainer}>\n\n                                    <Button type=\"button\" disabled={isSubmitting} variant=\"contained\" color='secondary' onClick={onCancelled} startIcon={<CancelOutlinedIcon />}>Cancel</Button>\n                                    {(mode === 1) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<AddOutlinedIcon />}>Create</Button>}\n                                    {(mode === 2) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='secondary' startIcon={<DeleteOutlinedIcon />}>Delete</Button>}\n                                    {(mode === 3) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<SaveOutlinedIcon />}>Save</Button>}\n                                </CardActions>\n                            </Card>\n                        </form>\n                    )}\n\n            </Formik>\n        </React.Fragment>\n    )\n}\n\nexport default CoreForm;","import React from 'react'\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport _ from 'lodash';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px',\n  },\n  importButton: {\n    alignSelf: 'stretch',\n    textTransform: 'none',\n  },\n  importUrlField: {\n    width: '30%',\n  },\n  importChip: {\n    width: '30%',\n    backgroundColor: 'Teal',\n    boxShadow: '2px 2px silver',\n    padding: '10px',\n    color: 'white',\n    borderRadius: '16px',\n    fontSize: '0.8em',\n    textAlign: 'center'\n  }\n}));\n\nconst CoreList = ({ definition, fbUser, records, onAdd, onDelete, onUpdate, onImport, importMessage, onImportUrlChange }) => {\n  const summaryColumns = _.filter(definition.fields, (f)=> !!f.summary);\n  const sortedSummaryColumns = _.orderBy(summaryColumns, ['summary', ['asc']]).map(r => { return { title: r.label, field: r.name } });\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {(importMessage || fbUser.enableImport) &&\n        <div className={classes.toolbarContainer}>\n          <TextField className={classes.importUrlField} onChange={onImportUrlChange} label=\"Import url\"></TextField>\n          <div className={classes.importChip} > {importMessage} </div>\n          <Button onClick={onImport} color='secondary' className={classes.importButton}>Import</Button>\n        </div>\n      }\n      <MaterialTable icons={tableIcons}\n        title={definition.pluralName}\n        columns={sortedSummaryColumns}\n        data={records}\n        actions={[\n          {\n            icon: tableIcons.Add,\n            tooltip: 'Add ' + definition.name,\n            isFreeAction: true,\n            onClick: (event) => onAdd()\n          },\n          {\n            icon: tableIcons.Edit,\n            tooltip: 'Edit ' + definition.name,\n            onClick: (event, rowData) => {\n              onUpdate(rowData);\n            }\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: 'Delete ' + definition.name,\n            iconProps: {\n              style: 'color: \"red\"',\n            },\n            onClick: (event, rowData) => {\n              onDelete(rowData);\n            }\n          }\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n        localization={{\n          body: {\n            emptyDataSourceMessage: `No ${definition.name}s to display, import or add ${definition.name}s by clicking the plus sign above.`,\n          },\n        }}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CoreList;","import React, { useState, useEffect } from 'react';\nimport CoreForm from './components/CoreForm';\nimport CoreList from './components/CoreList';\nimport pluralize from 'pluralize'\nimport firebaseService from '../../services/firebaseService';\nimport _ from 'lodash';\n\nconst RecordsManager = ({ fbUser, definition }) => {\n    const [importMessage, setImportMessage] = useState('');\n    const [importUrl, setImportUrl] = useState('');\n    const [records, setRecords] = useState([]);\n    definition = normalizeDefinition(definition);\n    const initialRecords = {};\n    definition.fields.forEach(element => {\n        initialRecords[element.name] = element.defaultValue;\n    });\n    const [selectedRecord, setSelectedRecord] = useState(initialRecords);\n    const [mode, setMode] = useState(0);\n    const svc = firebaseService(definition.name.toLowerCase());\n    useEffect(() => {\n        async function getRecords() {\n            if (records.length === 0) {\n                const result = await svc.getRecords(fbUser);\n                if (result && result.data) {\n                    const objectKeys = Object.keys(result.data);\n                    const mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\n                    setRecords(mappedRecords);\n                    setMode(0);\n                } else {\n                    setImportMessage('Enter service Url, then press Import to import up to 5000 records');\n                }\n            }\n        }\n        getRecords();\n    }, [fbUser, svc, definition, records]);\n\n    const handleOnAdded = (newRecord) => {\n        setRecords([...records, newRecord]);\n        setMode(0)\n    };\n    const handleOnUpdated = (updatedRecord) => {\n        const updatedRecords = records.map(c => c.firebaseId === updatedRecord.firebaseId ? updatedRecord : c);\n        setRecords(updatedRecords);\n        setMode(0)\n    };\n    const handleOnDeleted = (deletedRecord) => {\n        const remainingRecords = records.filter(x => x.firebaseId !== deletedRecord.firebaseId);\n        setRecords(remainingRecords);\n        setMode(0)\n    };\n    const handleOnCancelled = () => {\n        setMode(0)\n    };\n    const handleOnAdd = () => {\n        setSelectedRecord(initialRecords);\n        setMode(1);\n    };\n    const handleOnDelete = (deleteRecord) => {\n        setSelectedRecord(deleteRecord)\n        setMode(2);\n    };\n    const handleOnUpdate = (updateRecord) => {\n        setSelectedRecord(updateRecord)\n        setMode(3);\n    };\n    const handleOnImport = async () => {\n        try {\n            if (!importUrl) {\n                setImportMessage('Please enter import url...');\n                return;\n            }\n            const importRecords = await (await svc.importFrom(importUrl)).data;\n            setImportMessage(`Found ${importRecords.length} ${definition.name} records. Importing...`);\n            importRecords.forEach(r => {\n                setTimeout(() => {\n                    const newImport = {};\n                    const importedKeys = Object.keys(r);\n                    importedKeys.forEach(ik => {\n                        const normalizedKey = ik.replace('_', '').toLowerCase();\n                        //Find this normalizedKey in the definition\n                        const matchingKey = _.find(definition.fields, (f) => f.name.toLowerCase() === normalizedKey);\n                        if (matchingKey && matchingKey.name) {\n                            if (matchingKey.type === 'date') {\n                                newImport[matchingKey.name] = (new Date(r[ik]).toISOString().substring(0,10));\n                            } else {\n                                newImport[matchingKey.name] = r[ik];\n                            }\n                        }\n                    })\n                    svc.createRecord(fbUser, newImport);\n                    setImportMessage(`Importing ${definition.name} record# ${newImport[definition.fields[0].name]}`)\n                    setRecords([...records, newImport]);\n                }, 2000)\n            });\n        } catch (err) {\n            setImportMessage(err.message);\n        }\n    };\n    const handleImportUrlChange = (event) => {\n        setImportUrl(event.target.value);\n    }\n    return (\n        <React.Fragment>\n            {\n                mode === 0 ? <CoreList definition={definition} fbUser={fbUser} records={records} onAdd={handleOnAdd} onDelete={handleOnDelete} onUpdate={handleOnUpdate} onImport={handleOnImport} importMessage={importMessage} onImportUrlChange={handleImportUrlChange}></CoreList> :\n                    <CoreForm mode={mode} definition={definition} initialInputRecord={selectedRecord} fbUser={fbUser} onAdded={handleOnAdded} onDeleted={handleOnDeleted} onUpdated={handleOnUpdated} onCancelled={handleOnCancelled}></CoreForm>\n            }\n\n        </React.Fragment >\n    )\n}\n\nfunction normalizeDefinition(definition) {\n    if (definition.processed) return definition;\n    definition.name = definition.name[0].toUpperCase() + definition.name.toLowerCase().substring(1);\n    definition.pluralName = pluralize(definition.name);\n    if (definition.sqlFields) {\n        if (!definition.fields) definition.fields = [];\n        const fields = definition.sqlFields.split('\\n');\n        fields.forEach(sf => {\n            const fieldParts = sf.replace(/ /g, '').split('\\t');\n            const name = fieldParts[0][0].toLowerCase() + fieldParts[0].substring(1);\n            const label = fieldParts[0];\n            let type = '';\n            if (fieldParts[1].includes('char')) {\n                type = 'text';\n            } else if (fieldParts[1].includes('bit')) {\n                type = 'checkbox';\n            } else if (fieldParts[1].includes('datetime')) {\n                type = 'date';\n            } else if (fieldParts[1].includes('int')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('money')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('decimal')) {\n                type = 'number';\n            }\n\n            const existingDefinitionRecord = _.find(definition.fields, (f) => f.name === fieldParts[0]);\n            if (existingDefinitionRecord) {\n                existingDefinitionRecord.label = label;\n                existingDefinitionRecord.type = type;\n                existingDefinitionRecord.name = name;\n            } else {\n                definition.fields.push({\n                    name,\n                    label,\n                    type\n                })\n            }\n\n        });\n    }\n\n    definition.fields = definition.fields.map(f => {\n        const label = (f.label || (f.name[0].toUpperCase() + f.name.substring(1)));\n        const type = (f.type || 'text');\n        const summary = f.summary || 0;\n        const defaultValue = f.defaultValue || '';\n        const readonly = f.readonly || false;\n        return {\n            ...f,\n            label,\n            type,\n            summary,\n            readonly,\n            defaultValue,\n        };\n    });\n\n    if (!definition.fields.some(s => s.summary)) {\n        definition.fields[0].summary = 1;\n    }\n    if (!definition.fields.some(s => s.autofocus)) {\n        definition.fields[0].autofocus = true;\n    }\n    definition.processed = true;\n    return definition;\n}\n\nexport default RecordsManager;","import React from 'react';\nimport definition from './definition';\nimport RecordsManager from '../RecordsManager/RecordsManager';\n\nconst CustomersManager = ({fbUser}) => {\n    return (\n        <RecordsManager fbUser={fbUser} definition={definition} />\n    )\n\n}\n\nexport default CustomersManager;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    links: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n    }\n}));\n\nconst AppHeader = ({ fbUser, onSignout }) => {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <div className={classes.links}>\n                    {(fbUser && fbUser.idToken) && <Link to=\"/admin\" className={classes.link}><Typography variant=\"button\">Admin</Typography></Link>}\n                    {(fbUser && fbUser.idToken) && <Link to=\"/yachts\" className={classes.link}><Typography variant=\"button\">Yachts</Typography></Link>}\n                    {(fbUser && fbUser.idToken) && <Link to=\"/customers\" className={classes.link}><Typography variant=\"button\">Companies</Typography></Link>}\n                    {(fbUser && fbUser.idToken) && <Link to=\"/contacts\" className={classes.link}><Typography variant=\"button\">Contacts</Typography></Link>}\n                </div>\n                {\n                    (!fbUser || !fbUser.idToken) && <Link to=\"/signin\" className={classes.link}><Typography variant=\"button\">Login</Typography></Link>\n                }\n                {\n                    (fbUser && fbUser.idToken) && <Button className={classes.link} onClick={onSignout}><Typography variant=\"button\">Logout</Typography></Button>\n                }\n\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default AppHeader;","const definition = {\n    name: 'Contact',\n    fields: [\n      {name: 'id', label: 'Id', type: 'text', isKey: true, defaultValue: ''},\n      {name: 'fullName',  label: 'FullName', type: 'text', isKey: false,  isSummary: true, summaryOrder: 0, editOrder: 0, defaultValue: '', autoFocus: true},\n      {name: 'tel',  label: 'Telephone', type: 'tel', isKey: false,  isSummary: true, summaryOrder: 1, editOrder: 1, defaultValue: ''},\n      {name: 'country',  label: 'Country', type: 'text', isKey: false, isSummary: true, summaryOrder: 2, editOrder: 2, defaultValue: ''},\n      {name: 'birthDate',  label: 'Birth Date', type: 'date', isKey: false, editOrder: 3, defaultValue: ''},\n    ]\n  }\n\n  export default definition;","import React from 'react';\nimport definition from './definition';\nimport RecordsManager from '../RecordsManager/RecordsManager';\n\nconst ContactsManager = ({fbUser}) => {\n    return (\n        <RecordsManager fbUser={fbUser} definition={definition} />\n    )\n\n}\n\nexport default ContactsManager;","import React from 'react';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport authService from '../../services/authService'\nimport firebaseService  from '../../services/firebaseService'\n\nconst useStyles = makeStyles((theme) => ({\n    mainContainer: {\n        width: '80%',\n        height: '50vh',\n        margin: '30px auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    },\n    message: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    }\n\n}));\n\nconst AppHome = ({ fbUser }) => {\n    const classes = useStyles();\n    const fbSrvc = firebaseService();\n    return (\n        <Container className={classes.mainContainer}>\n            <Paper elevation={5} className={classes.message}>\n                {\n                    (!fbUser.idToken) && <Typography>Welcome to Keepy! Web API Key {authService.webApiKey}, ProjId: {fbSrvc.projId}</Typography>\n                }\n                {\n                    (fbUser.idToken) && <Typography color='primary'>{`Welcome, ${fbUser.localId} [aka: ${fbUser.email}]`}</Typography>\n                }\n            </Paper>\n        </Container>\n    )\n};\n\nexport default AppHome;","const definition = {\n  name: 'yAcht',\n  fields: [\n    { name: 'newname', label: 'New name', summary: 1 },\n    { name: 'oldname', label: 'Old name', summary: 2 },\n    { name: 'builder', summary: 3 },\n    { name: 'hull', summary: 4 },\n    { name: 'sellingbroker', label: 'Selling broker' },\n    { name: 'brokeragehouse', label: 'Brokerage house' },\n    { name: 'length', type: 'number' },\n    { name: 'beam' },\n    { name: 'depth' },\n    { name: 'newreg', label: 'New Registration' },\n    { name: 'dinghyreg', label: 'Dinghy Registration' },\n    { name: 'flag' },\n    { name: 'hailingport', label: 'Hailing Port' },\n    { name: 'oldreg', label: 'Old Registration' },\n    { name: 'tender' },\n    { name: 'hin' },\n    { name: 'owner', summary: 5 },\n    { name: 'corp' },\n    { name: 'documentation', type : 'textarea' },\n    { name: 'mailing' },\n    { name: 'email', type: 'email' },\n    { name: 'phone', type: 'tel', summary: 6 },\n    { name: 'lienholder', label: 'Lien Holder' },\n    { name: 'lien' },\n    { name: 'fileno', label: 'File No' },\n    { name: 'storage' },\n    { name: 'id', type: 'number' },\n    { name: 'notes', type: 'textarea' },\n  ]\n}\n\n\nexport default definition;","import React from 'react';\nimport definition from './definition';\nimport RecordsManager from '../RecordsManager/RecordsManager';\n\nconst YachtsManager = ({fbUser}) => {\n    return (\n        <RecordsManager fbUser={fbUser} definition={definition} />\n    )\n\n}\n\nexport default YachtsManager;","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport firebaseService from '../../services/firebaseService';\n\nconst Admin = ({ fbUser, onEnableImport }) => {\n\n    const svc = firebaseService('company');\n    const handleOnDeleteCustomers = () => {\n        svc.deleteTable(fbUser)\n    }\n\n    const handleOnEnableImport = ()=> {\n        onEnableImport();\n    }\n    return (\n        <React.Fragment>\n            <Button color='primary' onClick={handleOnDeleteCustomers}>\n                Delete Companies\n            </Button>\n            <Button color='primary' onClick={handleOnEnableImport}>\n                Enable Import\n            </Button>\n\n        </React.Fragment>\n    )\n}\n\nexport default Admin;","import React, { useState } from 'react';\n// import SignUp from './features/auth/SignUp';\nimport SignIn from './features/auth/SignIn';\nimport CustomersManager from './features/Customers/CustomersManager';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AppHeader from './features/AppHeader/AppHeader';\nimport ContactsManager from './features/Contacts/ContactsManager';\nimport AppHome  from './features/AppHome/AppHome';\nimport YachtsManager from './features/YachtsManager/YactsManager';\nimport Admin from './features/Admin/Admin'\n\nfunction App() {\n  const [appState, setAppState] = useState({ User: {} });\n  const handleOnSignedIn = (fbUser) => {\n    if (fbUser) {\n      setAppState(s => s = { ...appState, User: fbUser });\n    }\n  }\n  const handleOnSignedout = (fbUser) => {\n      setAppState({ User: {} });\n  }\n\n  const handleOnEnableImport = ()=> {\n    const newState = {...appState};\n    newState.User.enableImport = true;\n    setAppState(newState);\n  }\n\n  return (\n    <Router>\n      <AppHeader fbUser={appState.User} onSignout={handleOnSignedout}></AppHeader>\n      <Route exact path=\"/\" component={() => <AppHome fbUser={appState.User} />}></Route>\n      <Route exact path=\"/signin\" component={() => <SignIn onSignedIn={handleOnSignedIn} />}></Route>\n      <Route exact path=\"/customers\" component={() => <CustomersManager fbUser={appState.User} />}></Route>\n      <Route exact path=\"/yachts\" component={() => <YachtsManager fbUser={appState.User} />}></Route>\n      <Route exact path=\"/contacts\" component={() => <ContactsManager fbUser={appState.User} />}></Route>\n      <Route exact path=\"/admin\" component={() => <Admin fbUser={appState.User} onEnableImport={handleOnEnableImport} />}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}